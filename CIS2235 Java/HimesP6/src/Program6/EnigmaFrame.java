//Alan Himes
//ahimes1@cnm.edu
//Program 6 Enigma Class
//CIS2235
//File: MainP6.java, EnigmaFrame.java, EnigmaClass.java, EnigmaInterface.java

package Program6;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ahimes1
 */
public class EnigmaFrame extends javax.swing.JFrame {
    EnigmaClass enigma;
    /**
     * Creates new form EnigmaFrame
     */
    public EnigmaFrame() {
        initComponents();
        enigma = new EnigmaClass();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jBRandom = new javax.swing.JButton();
        jBEncode = new javax.swing.JButton();
        jLEncodedMessage = new javax.swing.JLabel();
        jBSave = new javax.swing.JButton();
        jTFMessage = new javax.swing.JTextField();
        jTFKey = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLEncodedMessage2 = new javax.swing.JLabel();
        jBOpen = new javax.swing.JButton();
        jBDecode = new javax.swing.JButton();
        jLDecodedMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Write a message to be encoded:");

        jLabel2.setText("Enter a number from 1 to 50 for the key (or just click the Random button)");

        jBRandom.setText("Random");
        jBRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRandomActionPerformed(evt);
            }
        });

        jBEncode.setText("Encode Message");
        jBEncode.setEnabled(false);
        jBEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEncodeActionPerformed(evt);
            }
        });

        jLEncodedMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jBSave.setText("Save");
        jBSave.setEnabled(false);
        jBSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSaveActionPerformed(evt);
            }
        });

        jTFMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFMessageKeyReleased(evt);
            }
        });

        jTFKey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFKeyKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBEncode)
                .addGap(208, 208, 208))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jBSave))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLEncodedMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTFKey, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBRandom)))
                        .addGap(0, 93, Short.MAX_VALUE))
                    .addComponent(jTFMessage))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBRandom)
                    .addComponent(jTFKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBEncode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLEncodedMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jBSave)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Encode", jPanel1);

        jLabel4.setText("Encoded message:");

        jLEncodedMessage2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLEncodedMessage2.setText("No encoded message. Enter a message to encode in the encode tab or open a file.");

        jBOpen.setText("Open");
        jBOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOpenActionPerformed(evt);
            }
        });

        jBDecode.setText("Decode message");
        jBDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDecodeActionPerformed(evt);
            }
        });

        jLDecodedMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBOpen, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jBDecode)
                        .addGap(207, 207, 207))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLEncodedMessage2, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLDecodedMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLEncodedMessage2)
                .addGap(66, 66, 66)
                .addComponent(jBDecode)
                .addGap(18, 18, 18)
                .addComponent(jLDecodedMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(jBOpen)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Decode", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFMessageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFMessageKeyReleased
        /*The encode and save buttons will not be available unless something's 
        typed in the text fields.*/
        messageCheck();
    }//GEN-LAST:event_jTFMessageKeyReleased

    private void jTFKeyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFKeyKeyReleased
        messageCheck();
    }//GEN-LAST:event_jTFKeyKeyReleased

    private void jBEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEncodeActionPerformed
        /*once setMessage(String, int) has the data from the text fields, the message
        is encoded with the encode() method. The try/catch is used in case a non-number
        has been entered for the key.*/
        try {
            enigma.setMessage(jTFMessage.getText(), Integer.parseInt(jTFKey.getText()));
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Add numbers only for the key!");
        }
        //labels in both tabs contain the encripted message.
        jLEncodedMessage.setText(enigma.getEncodedMessage());
        jLEncodedMessage2.setText(enigma.getEncodedMessage());//on the decode tab

    }//GEN-LAST:event_jBEncodeActionPerformed

    private void jBSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSaveActionPerformed
        /*Again, the message and key are set and encoded. The encoded message and
        key are then saved to a file. */
        try {
            enigma.setMessage(jTFMessage.getText(), Integer.parseInt(jTFKey.getText()));
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Add numbers only for the key!");
        }
        saveFile();
    }//GEN-LAST:event_jBSaveActionPerformed

    private void jBRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRandomActionPerformed
        jTFKey.setText(Integer.toString(((int)(Math.random() * 50)) + 1));
        messageCheck();
    }//GEN-LAST:event_jBRandomActionPerformed

    private void jBOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOpenActionPerformed
        loadFile();
        jLEncodedMessage2.setText(enigma.getEncodedMessage());
    }//GEN-LAST:event_jBOpenActionPerformed

    private void jBDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDecodeActionPerformed
        if (jLEncodedMessage2.getText() != enigma.getEncodedMessage())
            /*The jLEncodedMessage2 text in the decode tab will only show an 
            encoded message if one has been created in the encode tab or retrieved 
            from a file. So, if what's on that label doen't match the encoded message
            it's because there isn't an encoded message yet.*/
            jLDecodedMessage.setText("No encoded message!");
        else {
            /*enigma's encodedMessage and key variables should already be set by now, 
            and when passed to setEncodedMessage they're used in the decode function 
            which assigns the decoded string to the enigma's message variable.*/
            enigma.setEncodedMessage(enigma.getEncodedMessage(), enigma.getKey());
            jLDecodedMessage.setText(enigma.getMessage());
        }
    }//GEN-LAST:event_jBDecodeActionPerformed
    
    private void messageCheck() {
        //Something has to be in both text fields for the encode and save buttons to be available.
        if (!jTFMessage.getText().equals("") && !jTFKey.getText().equals("")) {
            jBEncode.setEnabled(true);
            jBSave.setEnabled(true);
        }
        else {
            jBEncode.setEnabled(false);
            jBSave.setEnabled(false);
        }
    }
    
    private void saveFile(){
        JFileChooser fileChooser = new JFileChooser();
        int choice = fileChooser.showSaveDialog(this);
        if(choice == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            enigma.writeFile(file);
        }
    }
    
    private void loadFile(){
        JFileChooser fileChooser = new JFileChooser();
        int choice = fileChooser.showOpenDialog(this);
        if(choice == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            enigma.readFile(file);
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EnigmaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EnigmaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EnigmaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EnigmaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new EnigmaFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDecode;
    private javax.swing.JButton jBEncode;
    private javax.swing.JButton jBOpen;
    private javax.swing.JButton jBRandom;
    private javax.swing.JButton jBSave;
    private javax.swing.JLabel jLDecodedMessage;
    private javax.swing.JLabel jLEncodedMessage;
    private javax.swing.JLabel jLEncodedMessage2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTFKey;
    private javax.swing.JTextField jTFMessage;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    // End of variables declaration//GEN-END:variables
}